#!/usr/bin/env python


import argparse

from utils import (
    get_data_to_parse,
    initial_file_load,
    initialise_counter_dict,
    load_json,
    write_to_file,
    initialise_participants_dict,
)


def sort_sandwich(participants_dict):
    temp_list = ["" * len(participants_dict.keys())]
    # get the first one and put it in index 0
    # get the 2nd one and put it in index last
    # work ya way in


def multichat_sandwich():
    return ""


def individual_sandwich(*, messages, participants):
    participants_dict = initialise_participants_dict(
        participants=participants, initialiser=0
    )
    for message in messages:
        participants_dict[message.get("sender_name")] += len(
            message.get("content", "").split(" ")
        )

    return dict(sorted(participants_dict.items(), key=lambda item: item[1]))


def main(data_to_parse, date_range_start, date_range_end, multichat):
    messages, participants = get_data_to_parse(
        data_to_parse, date_range_start, date_range_end, True
    )

    if multichat:
        for participant in participants:
            multichat_sandwich(participant, messages)
    else:
        sandwich = individual_sandwich(messages=messages, participants=participants)

    write_to_file(file_name="sandwich.json", data=sandwich)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-f", "--file", type=str, required=True)
    parser.add_argument("--multichat", type=bool, default=False)
    parser.add_argument(
        "--drstart",
        type=str,
        help="The date range start for getting messages, format needs to be (YYYY-MM)",
    )
    parser.add_argument(
        "--drend",
        type=str,
        help="The date range end for getting messages, format needs to be (YYYY-MM)",
    )

    args = parser.parse_args()

    main(
        initial_file_load(args.file, args.multichat),
        args.drstart,
        args.drend,
        args.multichat,
    )
